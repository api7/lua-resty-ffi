error_log /dev/stderr info;
worker_processes auto;
env LD_LIBRARY_PATH;
env CLASSPATH;

events {}

http {
    server {
        listen 10000;

        location / {
            content_by_lua_block {
                local demo = ngx.load_nonblocking_ffi("lib_nonblocking_ffi_java.so", "demo/httpclient/App,init,")
                local ok, res = demo:send([[ {"method": "GET", "uri": "https://httpbin.org/anything/get", "body": "foobar"} ]])
                assert(ok)
                local cjson = require("cjson")
                res = cjson.decode(res)
                for k, v in pairs(res.headers) do
                    ngx.say(k, ": ", v)
                end
                ngx.say(res.body)

                ngx.say("---------")
                local demo = ngx.load_nonblocking_ffi("lib_nonblocking_ffi_java.so", "demo/echo/App,init,")
                local ok, res = demo:echo("hello")
                assert(ok)
                ngx.say(res)
            }
        }
    }
}

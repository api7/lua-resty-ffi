error_log /dev/stderr info;
worker_processes auto;
env LD_LIBRARY_PATH;
env CLASSPATH;

events {}

http {
    server {
        listen 10000;

        location / {
            content_by_lua_block {
                --local demo = ngx.load_nonblocking_ffi("lib_nonblocking_ffi_java.so", "demo/http2/App,init,")
                --local ok, res = demo:send([[ {"method": "GET", "uri": "https://httpbin.org/anything/get", "body": "foobar"} ]])
                --assert(ok)
                --local cjson = require("cjson")
                --res = cjson.decode(res)
                --for k, v in pairs(res.headers) do
                --    ngx.say(k, ": ", v)
                --end
                --ngx.say(res.body)

                local demo = ngx.load_nonblocking_ffi("lib_nonblocking_ffi_java.so", "demo/echo/App,init,")
                local ok, res = demo:echo("hello")
                assert(ok)
                assert(res == "hello")

                demo:__unload()
                ok, res = demo:echo("foobar")
                assert(not ok)
                ngx.log(ngx.ERR, res)

                ngx.say("ok")
            }
        }
    }
}

daemon off;
error_log /dev/stderr info;
worker_processes auto;
env LD_LIBRARY_PATH;
env CLASSPATH;
env PYTHONPATH;

events {}

http {
    server {
        listen 20000;

        location /echo {
            content_by_lua_block {
                ngx.print("java: ")
                local demo = ngx.load_nonblocking_ffi("ffi_java", "demo/echo/App,init,")
                local ok, res = demo:echo("hello")
                assert(ok)
                assert(res == "hello")
                ngx.say("ok")

                ngx.print("python3: ")
                local demo = ngx.load_nonblocking_ffi("ffi_python3", "echo,init", {is_global = true})
                local ok, res = demo:echo("hello")
                assert(ok)
                assert(res == "hello")
                ngx.say("ok")

                ngx.print("go: ")
                local demo = ngx.load_nonblocking_ffi("ffi_go_echo")
                local ok, res = demo:echo("foobar")
                assert(ok)
                assert(res == "foobar")
                ngx.say("ok")

                ngx.print("rust: ")
                local cjson = require("cjson")
                local cfg = { name = "hello", value = "world", flag = 200 }
                local demo = ngx.load_nonblocking_ffi("echo", cjson.encode(cfg))
                local ok, res = demo:echo("foobar")
                assert(ok)
                assert(res == "foobar")
                ngx.say("ok")
            }
        }
    }
}

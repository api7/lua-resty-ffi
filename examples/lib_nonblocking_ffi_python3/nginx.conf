error_log /dev/stderr info;
worker_processes auto;

events {}

http {
    server {
        listen 10000;

        location / {
            content_by_lua_block {
				local demo = ngx.load_nonblocking_ffi("/opt/lua-resty-nonblocking-ffi/examples/lib_nonblocking_ffi_python3/lib_nonblocking_ffi_python3.so",
                    [[./nffi_kafka,init,{"servers":"localhost:9092", "topic":"foobar", "group_id": "foobar"}]], nil, true)
                local ok, res
                ok, res = demo:produce([[{"type":"produce", "msg":"hello"}]])
                assert(ok)
                ok, res = demo:produce([[{"type":"produce", "msg":"world"}]])
                assert(ok)
                ngx.sleep(2)
                ok, res = demo:consume([[{"type":"consume"}]])
                assert(ok)
                ngx.say(res)

				local demo = ngx.load_nonblocking_ffi("/opt/lua-resty-nonblocking-ffi/examples/lib_nonblocking_ffi_python3/lib_nonblocking_ffi_python3.so",
                    "./tmp,init", nil, true)
                local ok, res = demo:echo("hello")
                assert(ok)
                ngx.say(res)
            }
        }
    }
}
